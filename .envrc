# .envrc - Project environment configuration for direnv
# This file is automatically loaded when you enter the project directory

# ============================================================================
# PROJECT DETECTION
# ============================================================================
export PROJECT_NAME=$(basename "$PWD")

# ============================================================================
# PYTHON VIRTUAL ENVIRONMENT
# ============================================================================
# Activate Python virtual environment
VENV_PATH="$RES_ENVS/$PROJECT_NAME-venv/.venv"
if [ -d "$VENV_PATH" ]; then
    source "$VENV_PATH/bin/activate"
else
    log_error "Virtual environment not found: $VENV_PATH"
fi

# ============================================================================
# EXTERNAL CACHE CONFIGURATION
# ============================================================================
export CACHE_DIR="$RES_ROOT/cache/$PROJECT_NAME"

# Create cache directories
mkdir -p "$CACHE_DIR"
mkdir -p "$CACHE_DIR/pycache"
mkdir -p "$CACHE_DIR/htmlcov"
mkdir -p "$CACHE_DIR/.pytest_cache"
mkdir -p "$CACHE_DIR/.mypy_cache"
mkdir -p "$CACHE_DIR/.ruff_cache"

# Create symlinks to external cache (if not already symlinks)
_create_cache_symlink() {
    local link_name="$1"
    local target="$CACHE_DIR/$link_name"

    if [ ! -L "$link_name" ]; then
        rm -rf "$link_name" 2>/dev/null
        ln -sf "$target" "$link_name"
    fi
}

_create_cache_symlink ".pytest_cache"
_create_cache_symlink ".mypy_cache"
_create_cache_symlink ".ruff_cache"
_create_cache_symlink "htmlcov"
_create_cache_symlink ".coverage"
_create_cache_symlink "coverage.xml"

# Python bytecode cache
export PYTHONPYCACHEPREFIX="$CACHE_DIR/pycache"

# Tool-specific cache directories
export RUFF_CACHE_DIR="$CACHE_DIR/.ruff_cache"
export MYPY_CACHE_DIR="$CACHE_DIR/.mypy_cache"
export PYTEST_CACHE_DIR="$CACHE_DIR/.pytest_cache"
export COVERAGE_FILE="$CACHE_DIR/.coverage"
export COVERAGE_HTML_DIR="$CACHE_DIR/htmlcov"
export COVERAGE_XML_FILE="$CACHE_DIR/coverage.xml"

# ============================================================================
# PROJECT-SPECIFIC CONFIGURATION
# ============================================================================
export PYTHONPATH="$PWD/src"

# Load project .env if exists
dotenv_if_exists configs/.env

# ============================================================================
# CONTEXT INFORMATION
# ============================================================================
# Global contexts directory (from ~/.bashrc or set here)
export CONTEXTS_DIR="${CONTEXTS_DIR:-$DEV_ROOT/contexts/claude}"
export PROJECT_CONTEXT_FILE="$CONTEXTS_DIR/CLAUDE.md"

# ============================================================================
# WELCOME MESSAGE
# ============================================================================
log_status "✓ Environment loaded: $PROJECT_NAME"
log_status "  📂 Project: $PWD"
log_status "  🐍 Python: $(python --version 2>&1 | cut -d' ' -f2)"
log_status "  💾 Cache: $CACHE_DIR"
log_status "  📖 Context: $CONTEXTS_DIR"
