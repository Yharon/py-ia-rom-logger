# .envrc - Project environment configuration for direnv
# This file is automatically loaded when you enter the project directory

# ============================================================================
# HELPER FUNCTIONS
# ============================================================================
# Simple logging functions for direnv
log_status() { echo -e "\033[0;32m$1\033[0m"; }
log_error() { echo -e "\033[0;31m$1\033[0m" >&2; }

# ============================================================================
# PROJECT DETECTION
# ============================================================================
export PROJECT_NAME=$(basename "$PWD")

# ============================================================================
# PYTHON VIRTUAL ENVIRONMENT
# ============================================================================
# Activate Python virtual environment
VENV_PATH="$RES_ENVS/$PROJECT_NAME-venv/.venv"
if [ -d "$VENV_PATH" ]; then
    source "$VENV_PATH/bin/activate"
else
    log_error "Virtual environment not found: $VENV_PATH"
fi

# ============================================================================
# PERSONAL TOOLS (installed via uv, not in pyproject.toml)
# ============================================================================
# Install py-clean-cli if not already installed (personal development tool)
if ! python -c "import clean_cli" 2>/dev/null; then
    log_status "📦 Installing py-clean-cli..."
    uv pip install --quiet git+https://github.com/Yharon/py-clean-cli.git
fi

# ============================================================================
# EXTERNAL CACHE CONFIGURATION
# ============================================================================
export CACHE_DIR="$RES_ROOT/cache/$PROJECT_NAME"

# Create cache directories (tools will use them via environment variables)
mkdir -p "$CACHE_DIR/pycache"
mkdir -p "$CACHE_DIR/htmlcov"
mkdir -p "$CACHE_DIR/.pytest_cache"
mkdir -p "$CACHE_DIR/.mypy_cache"
mkdir -p "$CACHE_DIR/.ruff_cache"
mkdir -p "$CACHE_DIR/.uv_cache"

# Python bytecode cache
export PYTHONPYCACHEPREFIX="$CACHE_DIR/pycache"

# Tool-specific cache directories
export RUFF_CACHE_DIR="$CACHE_DIR/.ruff_cache"
export MYPY_CACHE_DIR="$CACHE_DIR/.mypy_cache"
export PYTEST_CACHE_DIR="$CACHE_DIR/.pytest_cache"
export COVERAGE_FILE="$CACHE_DIR/.coverage"
export COVERAGE_HTML_DIR="$CACHE_DIR/htmlcov"
export COVERAGE_XML_FILE="$CACHE_DIR/coverage.xml"

# UV Package Manager
export UV_CACHE_DIR="$CACHE_DIR/.uv_cache"
export UV_LINK_MODE="copy"

# ============================================================================
# PROJECT-SPECIFIC CONFIGURATION
# ============================================================================
export PYTHONPATH="$PWD/src"
export LOG_DIR="$RES_ROOT/logs"

# Create log directory if it doesn't exist
mkdir -p "$LOG_DIR"

# Load project .env if exists
dotenv_if_exists configs/.env

# ============================================================================
# CONTEXT INFORMATION
# ============================================================================
# Global contexts directory (from ~/.bashrc or set here)
export CONTEXTS_DIR="${CONTEXTS_DIR:-$DEV_ROOT/contexts/claude}"
export PROJECT_CONTEXT_FILE="$CONTEXTS_DIR/CLAUDE.md"

# ============================================================================
# WELCOME MESSAGE
# ============================================================================
log_status "✓ Environment loaded: $PROJECT_NAME"
log_status "  📂 Project: $PWD"
log_status "  🐍 Python: $(python --version 2>&1 | cut -d' ' -f2)"
log_status "  💾 Cache: $CACHE_DIR"
log_status "  📝 Logs: $LOG_DIR"
log_status "  📖 Context: $CONTEXTS_DIR"
